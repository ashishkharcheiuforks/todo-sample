<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="viewModel"
            type="com.sample.todo.main.tasks.ui.TasksViewModel" />

        <variable
            name="item"
            type="com.sample.todo.main.tasks.ui.TaskItem" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:onClick="@{() -> viewModel.onTaskItemClick(item.taskMini.id, item.taskMini.isCompleted)}">

        <View
            android:id="@+id/completed_loading_placeholder"
            android:layout_width="32dp"
            android:layout_height="32dp"
            android:layout_marginStart="8dp"
            android:layout_marginLeft="8dp"
            android:background="@drawable/generic_loading_placeholder_background"
            app:goneUnless="@{item.taskMini == null}"
            app:layout_constraintBottom_toTopOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="parent"
            tools:visibility="gone" />

        <View
            android:id="@+id/title_loading_placeholder"
            android:layout_width="0dp"
            android:layout_height="32dp"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            android:background="@drawable/generic_loading_placeholder_background"
            app:goneUnless="@{item.taskMini == null}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toEndOf="@+id/completed_loading_placeholder"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.5"
            tools:visibility="gone" />


        <FrameLayout
            android:id="@+id/select_container"
            android:layout_width="1px"
            android:layout_height="wrap_content"
            android:paddingStart="16dp"
            android:paddingLeft="16dp"
            android:paddingEnd="0dp"
            android:paddingRight="0dp"
            app:isInEditState="@{item.isInEditMode}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <CheckBox
                android:id="@+id/select_check_box"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:checked="@{item.isSelected}"
                android:onCheckedChanged="@{(v, isChecked) -> viewModel.onSelectCheckedChange(item.taskMini.id, item.isSelected)}" />
        </FrameLayout>

        <TextView
            android:id="@+id/textView3"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:layout_marginBottom="8dp"
            android:ellipsize="end"
            android:maxLines="1"
            app:asyncText="@{item.taskMini.title}"
            app:goneUnless="@{item.taskMini != null}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toEndOf="@+id/checkBox"
            app:layout_constraintTop_toTopOf="parent" />

        <CheckBox
            android:id="@+id/checkBox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:layout_marginLeft="16dp"
            android:layout_marginTop="8dp"
            android:layout_marginBottom="8dp"
            android:checked="@{item.taskMini.isCompleted == true}"
            android:onCheckedChanged="@{(view, checked) -> viewModel.onTaskCheckBoxClick(item.taskMini, checked)}"
            app:goneUnless="@{item.taskMini != null}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toEndOf="@id/select_container"
            app:layout_constraintTop_toTopOf="parent" />
    </androidx.constraintlayout.widget.ConstraintLayout>

</layout>
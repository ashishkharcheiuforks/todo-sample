import kotlin.String

/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions` */
object Libs {
    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val navigation_fragment_ktx: String = "androidx.navigation:navigation-fragment-ktx:" +
            Versions.android_arch_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val navigation_safe_args_gradle_plugin: String =
            "androidx.navigation:navigation-safe-args-gradle-plugin:" +
            Versions.android_arch_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val navigation_ui_ktx: String = "androidx.navigation:navigation-ui-ktx:" +
            Versions.android_arch_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val work_runtime_ktx: String = "android.arch.work:work-runtime-ktx:" +
            Versions.android_arch_work

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val work_testing: String = "android.arch.work:work-testing:" + Versions.android_arch_work

    const val activity_ktx: String = "androidx.activity:activity-ktx:" + Versions.activity_ktx

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val core_testing: String = "androidx.arch.core:core-testing:" + Versions.core_testing

    /**
     * http://tools.android.com */
    const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:" +
            Versions.constraintlayout

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val core_ktx: String = "androidx.core:core-ktx:" + Versions.core_ktx

    const val databinding_adapters: String = "androidx.databinding:databinding-adapters:" +
            Versions.androidx_databinding

    /**
     * https://developer.android.com/studio */
    const val databinding_common: String = "androidx.databinding:databinding-common:" +
            Versions.androidx_databinding

    /**
     * https://developer.android.com/studio */
    const val databinding_compiler: String = "androidx.databinding:databinding-compiler:" +
            Versions.androidx_databinding

    const val databinding_runtime: String = "androidx.databinding:databinding-runtime:" +
            Versions.androidx_databinding

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val fragment_ktx: String = "androidx.fragment:fragment-ktx:" + Versions.androidx_fragment

    const val fragment_testing: String = "androidx.fragment:fragment-testing:" +
            Versions.androidx_fragment

    const val lifecycle_livedata_ktx: String = "androidx.lifecycle:lifecycle-livedata-ktx:" +
            Versions.androidx_lifecycle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val lifecycle_reactivestreams_ktx: String =
            "androidx.lifecycle:lifecycle-reactivestreams-ktx:" + Versions.androidx_lifecycle

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val lifecycle_viewmodel_ktx: String = "androidx.lifecycle:lifecycle-viewmodel-ktx:" +
            Versions.androidx_lifecycle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val paging_common: String = "androidx.paging:paging-common:" + Versions.androidx_paging

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val paging_runtime_ktx: String = "androidx.paging:paging-runtime-ktx:" +
            Versions.androidx_paging

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val paging_rxjava2_ktx: String = "androidx.paging:paging-rxjava2-ktx:" +
            Versions.androidx_paging

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val room_compiler: String = "androidx.room:room-compiler:" + Versions.androidx_room

    const val room_coroutines: String = "androidx.room:room-coroutines:" + Versions.androidx_room

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val room_runtime: String = "androidx.room:room-runtime:" + Versions.androidx_room

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val room_rxjava2: String = "androidx.room:room-rxjava2:" + Versions.androidx_room

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val room_testing: String = "androidx.room:room-testing:" + Versions.androidx_room

    /**
     * https://developer.android.com/testing */
    const val espresso_core: String = "androidx.test.espresso:espresso-core:" +
            Versions.espresso_core

    /**
     * https://developer.android.com/testing */
    const val androidx_test_ext_junit: String = "androidx.test.ext:junit:" +
            Versions.androidx_test_ext_junit

    /**
     * https://developer.android.com/testing */
    const val androidx_test_core: String = "androidx.test:core:" + Versions.androidx_test_core

    /**
     * https://developer.android.com/testing */
    const val androidx_test_rules: String = "androidx.test:rules:" + Versions.androidx_test_rules

    /**
     * https://developer.android.com/testing */
    const val androidx_test_runner: String = "androidx.test:runner:" + Versions.androidx_test_runner

    /**
     * https://github.com/airbnb/epoxy */
    const val epoxy_databinding: String = "com.airbnb.android:epoxy-databinding:" +
            Versions.epoxy_databinding

    /**
     * https://github.com/airbnb/epoxy */
    const val epoxy_paging: String = "com.airbnb.android:epoxy-paging:" + Versions.epoxy_paging

    /**
     * https://github.com/airbnb/epoxy */
    const val epoxy_processor: String = "com.airbnb.android:epoxy-processor:" +
            Versions.epoxy_processor

    /**
     * https://github.com/airbnb/epoxy */
    const val epoxy: String = "com.airbnb.android:epoxy:" + Versions.epoxy

    /**
     * https://github.com/airbnb/mvrx */
    const val mvrx: String = "com.airbnb.android:mvrx:" + Versions.mvrx

    /**
     * https://developer.android.com/studio */
    const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

    /**
     * https://developer.android.com/studio */
    const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:" +
            Versions.com_android_tools_build_gradle

    /**
     * https://developer.android.com/studio */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    const val crashlytics: String = "com.crashlytics.sdk.android:crashlytics:" +
            Versions.crashlytics

    const val com_diffplug_gradle_spotless_gradle_plugin: String =
            "com.diffplug.gradle.spotless:com.diffplug.gradle.spotless.gradle.plugin:" +
            Versions.com_diffplug_gradle_spotless_gradle_plugin

    /**
     * https://github.com/facebook/stetho */
    const val stetho: String = "com.facebook.stetho:stetho:" + Versions.stetho

    const val com_github_triplet_play_gradle_plugin: String =
            "com.github.triplet.play:com.github.triplet.play.gradle.plugin:" +
            Versions.com_github_triplet_play_gradle_plugin

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val material: String = "com.google.android.material:material:" + Versions.material

    const val com_google_android_play_core: String = "com.google.android.play:core:" +
            Versions.com_google_android_play_core

    /**
     * https://github.com/google/dagger */
    const val dagger_android_processor: String = "com.google.dagger:dagger-android-processor:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger_android_support: String = "com.google.dagger:dagger-android-support:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger_compiler: String = "com.google.dagger:dagger-compiler:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger: String = "com.google.dagger:dagger:" + Versions.com_google_dagger

    const val firebase_core: String = "com.google.firebase:firebase-core:" + Versions.firebase_core

    const val firebase_firestore: String = "com.google.firebase:firebase-firestore:" +
            Versions.firebase_firestore

    const val firebase_functions: String = "com.google.firebase:firebase-functions:" +
            Versions.firebase_functions

    /**
     * http://tools.android.com/ */
    const val google_services: String = "com.google.gms:google-services:" + Versions.google_services

    const val com_gradle_build_scan_gradle_plugin: String =
            "com.gradle.build-scan:com.gradle.build-scan.gradle.plugin:" +
            Versions.com_gradle_build_scan_gradle_plugin

    /**
     * https://github.com/JakeWharton/ThreeTenABP/ */
    const val threetenabp: String = "com.jakewharton.threetenabp:threetenabp:" +
            Versions.threetenabp

    /**
     * https://github.com/JakeWharton/timber */
    const val timber: String = "com.jakewharton.timber:timber:" + Versions.timber

    /**
     * https://github.com/JakeWharton/butterknife/ */
    const val butterknife_gradle_plugin: String = "com.jakewharton:butterknife-gradle-plugin:" +
            Versions.butterknife_gradle_plugin

    /**
     * https://github.com/nhaarman/mockito-kotlin */
    const val mockito_kotlin: String = "com.nhaarman.mockitokotlin2:mockito-kotlin:" +
            Versions.mockito_kotlin

    /**
     * https://github.com/square/AssistedInject/ */
    const val assisted_inject_annotations_dagger2: String =
            "com.squareup.inject:assisted-inject-annotations-dagger2:" +
            Versions.com_squareup_inject

    /**
     * https://github.com/square/AssistedInject/ */
    const val assisted_inject_processor_dagger2: String =
            "com.squareup.inject:assisted-inject-processor-dagger2:" + Versions.com_squareup_inject

    /**
     * https://github.com/square/moshi */
    const val moshi_kotlin_codegen: String = "com.squareup.moshi:moshi-kotlin-codegen:" +
            Versions.com_squareup_moshi

    /**
     * https://github.com/square/moshi */
    const val moshi: String = "com.squareup.moshi:moshi:" + Versions.com_squareup_moshi

    /**
     * https://github.com/square/retrofit/ */
    const val retrofit: String = "com.squareup.retrofit2:retrofit:" + Versions.retrofit

    /**
     * https://github.com/square/sqldelight/ */
    const val android_driver: String = "com.squareup.sqldelight:android-driver:" +
            Versions.com_squareup_sqldelight

    /**
     * https://github.com/square/sqldelight/ */
    const val android_paging_extensions: String =
            "com.squareup.sqldelight:android-paging-extensions:" + Versions.com_squareup_sqldelight

    /**
     * https://github.com/square/sqldelight/ */
    const val gradle_plugin: String = "com.squareup.sqldelight:gradle-plugin:" +
            Versions.com_squareup_sqldelight

    /**
     * https://github.com/square/sqldelight/ */
    const val com_squareup_sqldelight_runtime: String = "com.squareup.sqldelight:runtime:" +
            Versions.com_squareup_sqldelight

    /**
     * https://github.com/square/sqldelight/ */
    const val rxjava2_extensions: String = "com.squareup.sqldelight:rxjava2-extensions:" +
            Versions.com_squareup_sqldelight

    /**
     * https://github.com/square/sqldelight/ */
    const val sqlite_driver: String = "com.squareup.sqldelight:sqlite-driver:" +
            Versions.com_squareup_sqldelight

    /**
     * http://maven.apache.org */
    const val lorem: String = "com.thedeanda:lorem:" + Versions.lorem

    const val de_fayard_buildsrcversions_gradle_plugin: String =
            "de.fayard.buildSrcVersions:de.fayard.buildSrcVersions.gradle.plugin:" +
            Versions.de_fayard_buildsrcversions_gradle_plugin

    const val io_fabric_tools_gradle: String = "io.fabric.tools:gradle:" +
            Versions.io_fabric_tools_gradle

    /**
     * https://github.com/ReactiveX/RxAndroid */
    const val rxandroid: String = "io.reactivex.rxjava2:rxandroid:" + Versions.rxandroid

    /**
     * https://github.com/ReactiveX/RxJava */
    const val rxjava: String = "io.reactivex.rxjava2:rxjava:" + Versions.rxjava

    /**
     * https://github.com/ReactiveX/RxKotlin */
    const val rxkotlin: String = "io.reactivex.rxjava2:rxkotlin:" + Versions.rxkotlin

    /**
     * http://code.google.com/p/atinject/ */
    const val javax_inject: String = "javax.inject:javax.inject:" + Versions.javax_inject

    /**
     * http://junit.org */
    const val junit_junit: String = "junit:junit:" + Versions.junit_junit

    /**
     * https://kotlinlang.org/ */
    const val kotlin_allopen: String = "org.jetbrains.kotlin:kotlin-allopen:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_android_extensions: String =
            "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_gradle_plugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_scripting_compiler_embeddable: String =
            "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_stdlib_jdk8: String = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_stdlib: String = "org.jetbrains.kotlin:kotlin-stdlib:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_test_annotations_common: String =
            "org.jetbrains.kotlin:kotlin-test-annotations-common:" + Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_test_common: String = "org.jetbrains.kotlin:kotlin-test-common:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_test_junit: String = "org.jetbrains.kotlin:kotlin-test-junit:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_test: String = "org.jetbrains.kotlin:kotlin-test:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://github.com/Kotlin/kotlinx.coroutines */
    const val kotlinx_coroutines_android: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-android:" + Versions.org_jetbrains_kotlinx

    /**
     * https://github.com/Kotlin/kotlinx.coroutines */
    const val kotlinx_coroutines_core: String = "org.jetbrains.kotlinx:kotlinx-coroutines-core:" +
            Versions.org_jetbrains_kotlinx

    /**
     * https://github.com/mockito/mockito */
    const val mockito_android: String = "org.mockito:mockito-android:" + Versions.org_mockito

    /**
     * https://github.com/mockito/mockito */
    const val mockito_core: String = "org.mockito:mockito-core:" + Versions.org_mockito

    /**
     * http://robolectric.org */
    const val robolectric: String = "org.robolectric:robolectric:" + Versions.robolectric

    /**
     * https://www.threeten.org/threetenbp */
    const val threetenbp: String = "org.threeten:threetenbp:" + Versions.threetenbp

    const val sqlite_jdbc: String = "org.xerial:sqlite-jdbc:" + Versions.sqlite_jdbc
}
